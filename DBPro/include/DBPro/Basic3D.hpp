/*
            File : DBPro/Basic3D.hpp
       Generated : 2011/09/02 20:14:26
   DBPro release : 7.7
*/

#ifndef INCLUDE_GUARD_DBPro_Basic3D_hpp
#define INCLUDE_GUARD_DBPro_Basic3D_hpp

#ifdef DBPRO__COMPILER_HAS_PRAGMA_ONCE
#pragma once
#endif

#define VC_EXTRALEAN
#include <windows.h>
#include <D3dx9tex.h>


// Include DBPro specific types, if not already included
#ifndef _DBODATA_H_
#include <Official/DBOData.h>
#endif
#ifndef INCLUDE_GUARD_Support_DBProTypes_hpp
#include <Support/DBProTypes.hpp>
#endif



namespace DBPro
{
    void __cdecl AddLimb(int ObjectNumber,int LimbNumber,int MeshNumber);
    void __cdecl AddMemblockToObject(int MemblockNumber,int ObjectNumber);
    void __cdecl AddMeshToVertexdata(int MeshNumber);
    int __cdecl AlphaAvailable();
    int __cdecl AlphablendingAvailable();
    int __cdecl AlphacomparisonAvailable();
    int __cdecl AnistropicfilteringAvailable();
    int __cdecl AntialiasAvailable();
    void __cdecl AppendObjectAnimation(int ObjectNumber,LPCSTR Filename);
    void __cdecl AppendObject(LPCSTR Filename,int ObjectNumber,int StartFrame);
    void __cdecl AutomaticCameraCollision(int CameraNumber,float Radius,int Response);
    void __cdecl AutomaticCameraCollision(int CameraNumber,float Radius,int Response,int StandGroundMode);
    void __cdecl AutomaticObjectCollision(int ObjectNumber,float Radius,int Response);
    int __cdecl BlitsystolocalAvailable();
    void __cdecl CalculateAutomaticCollision();
    void __cdecl CalculateObjectBounds(int a);
    int __cdecl CalibrategammaAvailable();
    void __cdecl ChangeMesh(int ObjectNumber,int LimbNumber,int MeshNumber);
    int __cdecl CheckLimbLink(int ObjectNumber,int LimbNumber);
    void __cdecl ClearAllObjectKeyframes(int ObjectNumber);
    void __cdecl ClearObjectKeyframe(int ObjectNumber,int Keyframe);
    int __cdecl ClipandscalepointsAvailable();
    int __cdecl CliptlvertsAvailable();
    void __cdecl CloneObject(int ObjectNumber,int SourceObject);
    void __cdecl CloneObject(int ObjectNumber,int SourceObject,int ShareOriginalData);
    void __cdecl ColorLimb(int ObjectNumber,int LimbNumber,DWORD ColorValue);
    void __cdecl ColorObject(int ObjectNumber,DWORD ColorValue);
    int __cdecl ColorperspectiveAvailable();
    int __cdecl ColorwriteenableAvailable();
    void __cdecl ConvertMeshToVertexdata(int MeshNumber);
    void __cdecl ConvertObjectFvf(int ObjectNumber,DWORD FvfFormat);
    void __cdecl CreatePixelShaderFromFile(int PixelshaderNumber,LPCSTR ShaderFilename);
    void __cdecl CreateVertexShaderFromFile(int VertexshaderNumber,LPCSTR ShaderFilename);
    int __cdecl CubemapAvailable();
    int __cdecl CullccwAvailable();
    int __cdecl CullcwAvailable();
    void __cdecl DeleteEffect(int EffectNumber);
    void __cdecl DeleteMemblockFromObject(int ObjectNumber);
    void __cdecl DeleteMeshFromVertexdata(int VertexStart,int VertexEnd,int IndexStart,int IndexEnd);
    void __cdecl DeleteMesh(int MeshNumber);
    void __cdecl DeleteObjectCollisionBox(int ObjectNumber);
    void __cdecl DeleteObject(int ObjectNumber);
    void __cdecl DeleteObjects(int From,int To);
    void __cdecl DeletePixelShader(int PixelshaderNumber);
    void __cdecl DeleteVertexShader(int VertexshaderNumber);
    void __cdecl DisableObjectZbias(int ObjectNumber);
    void __cdecl DisableObjectZdepth(int ObjectNumber);
    void __cdecl DisableObjectZread(int ObjectNumber);
    void __cdecl DisableObjectZwrite(int ObjectNumber);
    void __cdecl DisableTnl();
    int __cdecl DitherAvailable();
    int __cdecl EffectExist(int EffectNumber);
    void __cdecl EnableObjectZbias(int ObjectNumber,float SlopeScale,float Depth);
    void __cdecl EnableObjectZdepth(int ObjectNumber);
    void __cdecl EnableObjectZread(int ObjectNumber);
    void __cdecl EnableObjectZwrite(int ObjectNumber);
    void __cdecl EnableTnl();
    void __cdecl ExcludeLimbOff(int ObjectId,int LimbNumber);
    void __cdecl ExcludeLimbOn(int ObjectId,int LimbNumber);
    void __cdecl ExcludeObjectOff(int ObjectId);
    void __cdecl ExcludeObjectOn(int ObjectId);
    void __cdecl FadeObject(int ObjectNumber,float FadeValue);
    int __cdecl FilteringAvailable();
    void __cdecl FixObjectPivot(int ObjectNumber);
    void __cdecl FlushVideoMemory();
    int __cdecl FogAvailable();
    int __cdecl FograngeAvailable();
    int __cdecl FogtableAvailable();
    int __cdecl FogvertexAvailable();
    int __cdecl FullscreengammaAvailable();
    int __cdecl GetDeviceType();
    int __cdecl GetIndexdata(int IndexNumber);
    int __cdecl GetMaximumLights();
    int __cdecl GetMaximumPixelShaderValue();
    float __cdecl GetMaximumPixelShaderVersion();
    int __cdecl GetMaximumTextureHeight();
    int __cdecl GetMaximumTextureWidth();
    int __cdecl GetMaximumVertexShaderConstants();
    float __cdecl GetMaximumVertexShaderVersion();
    int __cdecl GetMaximumVolumeExtent();
    void __cdecl GetMemblockFromObject(int MemblockNumber,int ObjectNumber);
    float __cdecl GetObjectCollisionX();
    float __cdecl GetObjectCollisionY();
    float __cdecl GetObjectCollisionZ();
    float __cdecl GetPickDistance();
    float __cdecl GetPickVectorX();
    float __cdecl GetPickVectorY();
    float __cdecl GetPickVectorZ();
    DWORD __cdecl GetVertexdataDiffuse(int VertexIndex);
    int __cdecl GetVertexdataIndexCount();
    float __cdecl GetVertexdataNormalsX(int VertexIndex);
    float __cdecl GetVertexdataNormalsY(int VertexIndex);
    float __cdecl GetVertexdataNormalsZ(int VertexIndex);
    float __cdecl GetVertexdataPositionX(int VertexIndex);
    float __cdecl GetVertexdataPositionY(int VertexIndex);
    float __cdecl GetVertexdataPositionZ(int VertexIndex);
    sMesh* __cdecl GetVertexdataPtr();
    float __cdecl GetVertexdataU(int VertexIndex);
    float __cdecl GetVertexdataU(int VertexIndex,int StageNumber);
    int __cdecl GetVertexdataVertexCount();
    float __cdecl GetVertexdataV(int VertexIndex);
    float __cdecl GetVertexdataV(int VertexIndex,int StageNumber);
    void __cdecl GhostObjectOff(int ObjectNumber);
    void __cdecl GhostObjectOn(int ObjectNumber);
    void __cdecl GhostObjectOn(int ObjectNumber,int GhostEffect);
    void __cdecl GlueObjectToLimb(int ObjectNumber,int SecondObject,int LimbNumber);
    void __cdecl GlueObjectToLimb(int ObjectNumber,int SecondObject,int LimbNumber,int GlueMode);
    void __cdecl HideLimb(int ObjectNumber,int LimbNumber);
    void __cdecl HideObjectBounds(int ObjectNumber);
    void __cdecl HideObject(int ObjectNumber);
    void __cdecl InstanceObject(int ObjectNumber,int SourceObject);
    float __cdecl IntersectObject(int ObjectNumber,float X,float Y,float Z,float Tox,float Toy,float Toz);
    float __cdecl LimbAngleX(int ObjectNumber,int LimbNumber);
    float __cdecl LimbAngleY(int ObjectNumber,int LimbNumber);
    float __cdecl LimbAngleZ(int ObjectNumber,int LimbNumber);
    int __cdecl LimbCollision(int ObjectaNumber,int LimbaNumber,int ObjectbNumber,int LimbbNumber);
    float __cdecl LimbDirectionX(int ObjectNumber,int LimbNumber);
    float __cdecl LimbDirectionY(int ObjectNumber,int LimbNumber);
    float __cdecl LimbDirectionZ(int ObjectNumber,int LimbNumber);
    int __cdecl LimbExist(int ObjectNumber,int LimbNumber);
    int __cdecl LimbHit(int ObjectaNumber,int LimbaNumber,int ObjectbNumber,int LimbbNumber);
    LPSTR __cdecl LimbName(int ObjectNumber,int LimbNumber);
    float __cdecl LimbOffsetX(int ObjectNumber,int LimbNumber);
    float __cdecl LimbOffsetY(int ObjectNumber,int LimbNumber);
    float __cdecl LimbOffsetZ(int ObjectNumber,int LimbNumber);
    float __cdecl LimbPositionX(int ObjectNumber,int LimbNumber);
    float __cdecl LimbPositionY(int ObjectNumber,int LimbNumber);
    float __cdecl LimbPositionZ(int ObjectNumber,int LimbNumber);
    float __cdecl LimbScaleX(int ObjectNumber,int LimbNumber);
    float __cdecl LimbScaleY(int ObjectNumber,int LimbNumber);
    float __cdecl LimbScaleZ(int ObjectNumber,int LimbNumber);
    LPSTR __cdecl LimbTextureName(int ObjectNumber,int LimbNumber);
    LPSTR __cdecl LimbTextureName(int ObjectNumber,int LimbNumber,int TextureStage);
    int __cdecl LimbTexture(int ObjectNumber,int LimbNumber);
    int __cdecl LimbTexture(int ObjectNumber,int LimbNumber,int TextureStage);
    int __cdecl LimbVisible(int ObjectNumber,int LimbNumber);
    void __cdecl LinkLimb(int ObjectNumber,int LimbParent,int LimbChild);
    void __cdecl LoadEffect(LPCSTR Filename,int EffectNumber,int TextureFlag);
    void __cdecl LoadEffect(LPCSTR Filename,int EffectNumber,int TextureFlag,int Donotgenerateextradata);
    void __cdecl LoadMesh(LPCSTR Filename,int MeshNumber);
    void __cdecl LoadObject(LPCSTR Filename,int ObjectNumber);
    void __cdecl LoadObject(LPCSTR Filename,int ObjectNumber,int DbproMode);
    void __cdecl LoadObject(LPCSTR Filename,int ObjectNumber,int DbproMode,int DivideTexture);
    void __cdecl LockObjectOff(int ObjectNumber);
    void __cdecl LockObjectOn(int ObjectNumber);
    void __cdecl LockVertexdataForLimb(int ObjectNumber,int LimbNumber);
    void __cdecl LockVertexdataForLimb(int ObjectNumber,int LimbNumber,int LockMode);
    void __cdecl LockVertexdataForMesh(int MeshNumber);
    void __cdecl LoopObject(int ObjectNumber);
    void __cdecl LoopObject(int ObjectNumber,int StartFrame);
    void __cdecl LoopObject(int ObjectNumber,int StartFrame,int EndFrame);
    void __cdecl MakeEmitter(int ObjectNumber,int Size);
    void __cdecl MakeMeshFromObject(int MeshNumber,int ObjectNumber);
    void __cdecl MakeMeshFromObject(int MeshNumber,int ObjectNumber,int IgnoreMode);
    void __cdecl MakeObjectBox(int ObjectNumber,float Width,float Height,float Depth);
    void __cdecl MakeObjectCollisionBox(int ObjectNumber,float X1,float Y1,float Z1,float X2,float Y2,float Z2,int CollisionFlag);
    void __cdecl MakeObjectCone(int ObjectNumber,float Size);
    void __cdecl MakeObjectCube(int ObjectNumber,float Size);
    void __cdecl MakeObjectCylinder(int ObjectNumber,float Size);
    void __cdecl MakeObjectFromLimb(int ObjectNumber,int SecondObject,int LimbNumber);
    void __cdecl MakeObjectFromLimb(int ObjectNumber,int SecondObject,int LimbNumber,int AllLimbsFlag);
    void __cdecl MakeObjectPlain(int ObjectNumber,float Width,float Height);
    void __cdecl MakeObjectPlain(int ObjectNumber,float Width,float Height,int Mode);
    void __cdecl MakeObjectPlane(int ObjectNumber,float Width,float Height);
    void __cdecl MakeObjectPlane(int ObjectNumber,float Width,float Height,int Mode);
    void __cdecl MakeObjectSphere(int ObjectNumber,float Size);
    void __cdecl MakeObjectSphere(int ObjectNumber,float Size,int Rows,int Columns);
    void __cdecl MakeObjectTriangle(int ObjectNumber,float X1,float Y1,float Z1,float X2,float Y2,float Z2,float X3,float Y3,float Z3);
    void __cdecl MakeObject(int ObjectNumber,int MeshIndex,int ImageNumber);
    int __cdecl MeshExist(int MeshNumber);
    int __cdecl MipcubemapAvailable();
    int __cdecl MipmapAvailable();
    int __cdecl MipmaplodbiasAvailable();
    int __cdecl MipmapvolumeAvailable();
    void __cdecl MoveObjectDown(int ObjectNumber,float Value);
    void __cdecl MoveObjectLeft(int ObjectNumber,float Value);
    void __cdecl MoveObjectRight(int ObjectNumber,float Value);
    void __cdecl MoveObjectUp(int ObjectNumber,float Value);
    void __cdecl MoveObject(int ObjectNumber,float Speed);
    int __cdecl NonlocalvideomemoryAvailable();
    int __cdecl NonpowtexturesAvailable();
    float __cdecl ObjectAngleX(int ObjectNumber);
    float __cdecl ObjectAngleY(int ObjectNumber);
    float __cdecl ObjectAngleZ(int ObjectNumber);
    float __cdecl ObjectCollisionCenterX(int ObjectNumber);
    float __cdecl ObjectCollisionCenterY(int ObjectNumber);
    float __cdecl ObjectCollisionCenterZ(int ObjectNumber);
    float __cdecl ObjectCollisionRadius(int ObjectNumber);
    int __cdecl ObjectCollision(int ObjectaNumber,int ObjectbNumber);
    int __cdecl ObjectExist(int ObjectNumber);
    float __cdecl ObjectFrame(int ObjectNumber);
    int __cdecl ObjectHit(int ObjectaNumber,int ObjectbNumber);
    int __cdecl ObjectInScreen(int ObjectNumber);
    float __cdecl ObjectInterpolation(int ObjectNumber);
    int __cdecl ObjectLooping(int ObjectNumber);
    int __cdecl ObjectPlaying(int ObjectNumber);
    float __cdecl ObjectPositionX(int ObjectNumber);
    float __cdecl ObjectPositionY(int ObjectNumber);
    float __cdecl ObjectPositionZ(int ObjectNumber);
    int __cdecl ObjectScreenX(int ObjectNumber);
    int __cdecl ObjectScreenY(int ObjectNumber);
    float __cdecl ObjectSizeX(int ObjectNumber);
    float __cdecl ObjectSizeX(int ObjectNumber,int ActualSize);
    float __cdecl ObjectSizeY(int ObjectNumber);
    float __cdecl ObjectSizeY(int ObjectNumber,int ActualSize);
    float __cdecl ObjectSizeZ(int ObjectNumber);
    float __cdecl ObjectSizeZ(int ObjectNumber,int ActualSize);
    float __cdecl ObjectSize(int ObjectNumber);
    float __cdecl ObjectSize(int ObjectNumber,int ActualSize);
    float __cdecl ObjectSpeed(int ObjectNumber);
    int __cdecl ObjectVisible(int ObjectNumber);
    void __cdecl OffsetLimb(int ObjectNumber,int LimbNumber,float X,float Y,float Z);
    void __cdecl OffsetLimb(int ObjectNumber,int LimbNumber,float X,float Y,float Z,int BoundsFlag);
    int __cdecl OnlysquaretexturesAvailable();
    void __cdecl PerformChecklistForEffectErrors();
    void __cdecl PerformChecklistForEffectErrors(int EffectNumber);
    void __cdecl PerformChecklistForEffectValues(int EffectNumber);
    void __cdecl PerformChecklistForObjectLimbs(int ObjectNumber);
    void __cdecl PerformChecklistForOnscreenObjects(int Mode);
    int __cdecl PerspectivetexturesAvailable();
    int __cdecl PickObject(int ScreenX,int ScreenY,int ObjectStart,int ObjectEnd);
    int __cdecl PickObject(int ScreenX,int ScreenY,int ObjectStart,int ObjectEnd,int IgnoreCameraFlag);
    void __cdecl PickScreen(int ScreenX,int ScreenY,float Distance);
    void __cdecl PitchObjectDown(int ObjectNumber,float Value);
    void __cdecl PitchObjectUp(int ObjectNumber,float Value);
    int __cdecl PixelShaderExist(int PixelshaderNumber);
    void __cdecl PlayObject(int ObjectNumber);
    void __cdecl PlayObject(int ObjectNumber,int StartFrame);
    void __cdecl PlayObject(int ObjectNumber,int StartFrame,int EndFrame);
    void __cdecl PointObject(int ObjectNumber,float X,float Y,float Z);
    void __cdecl PositionObject(int ObjectNumber,float X,float Y,float Z);
    int __cdecl ProjectedtexturesAvailable();
    void __cdecl RemoveLimb(int ObjectNumber,int LimbNumber);
    int __cdecl RenderafterflipAvailable();
    int __cdecl RenderwindowedAvailable();
    void __cdecl RollObjectLeft(int ObjectNumber,float Value);
    void __cdecl RollObjectRight(int ObjectNumber,float Value);
    void __cdecl RotateLimb(int ObjectNumber,int LimbNumber,float Xangle,float Yangle,float Zangle);
    void __cdecl RotateLimb(int ObjectNumber,int LimbNumber,float Xangle,float Yangle,float Zangle,int BoundsFlag);
    void __cdecl RotateObject(int ObjectNumber,float Xangle,float Yangle,float Zangle);
    void __cdecl SaveMesh(LPCSTR Filename,int MeshNumber);
    void __cdecl SaveObjectAnimation(int ObjectNumber,LPCSTR Filename);
    void __cdecl SaveObject(LPCSTR Filename,int ObjectNumber);
    void __cdecl ScaleLimbTexture(int ObjectNumber,int LimbNumber,float Uscale,float Vscale);
    void __cdecl ScaleLimbTexture(int ObjectNumber,int LimbNumber,int Stage,float Uscale,float Vscale);
    void __cdecl ScaleLimb(int ObjectNumber,int LimbNumber,float Xsize,float Ysize,float Zsize);
    void __cdecl ScaleLimb(int ObjectNumber,int LimbNumber,float Xsize,float Ysize,float Zsize,int BoundsFlag);
    void __cdecl ScaleObjectTexture(int ObjectNumber,float Uscale,float Vscale);
    void __cdecl ScaleObjectTexture(int ObjectNumber,int Stage,float Uscale,float Vscale);
    void __cdecl ScaleObject(int ObjectNumber,float Xsize,float Ysize,float Zsize);
    void __cdecl ScrollLimbTexture(int ObjectNumber,int LimbNumber,float X,float Y);
    void __cdecl ScrollLimbTexture(int ObjectNumber,int LimbNumber,int Stage,float X,float Y);
    void __cdecl ScrollObjectTexture(int ObjectNumber,float X,float Y);
    void __cdecl ScrollObjectTexture(int ObjectNumber,int Stage,float X,float Y);
    int __cdecl SeparatetexturememoriesAvailable();
    int __cdecl SeperatetexturememoriesAvailable();
    void __cdecl SetAlphaMappingOn(int ObjectNumber,float AlphaPercentage);
    void __cdecl SetBlendMappingOn(int ObjectNumber,int ImageNumber,int BlendMode);
    void __cdecl SetBlendMappingOn(int ObjectNumber,int StageIndex,int ImageNumber,int Texcoordmode,int BlendMode);
    void __cdecl SetBlendMappingOn(int ObjectNumber,int StageIndex,int ImageNumber,int Texcoordmode,int BlendMode,int Arg1,int Arg2,int Arg0,int Argresult);
    void __cdecl SetBlendMappingOn(int ObjectNumber,int LimbNumber,int StageIndex,int ImageNumber,int Texcoordmode,int BlendMode,int Arg1,int Arg2,int Arg0,int Argresult);
    void __cdecl SetBumpMappingOn(int ObjectNumber,int ImageNumber);
    void __cdecl SetCartoonShadingOn(int ObjectNumber,int ShadeImage,int EdgeImage);
    void __cdecl SetCubeMappingOn(int ObjectNumber,int Face1,int Face2,int Face3,int Face4,int Face5,int Face6);
    void __cdecl SetDetailMappingOn(int ObjectNumber,int ImageNumber);
    void __cdecl SetEffectConstantBoolean(int EffectNumber,LPCSTR ConstantString,int ConstantValue);
    void __cdecl SetEffectConstantFloat(int EffectNumber,LPCSTR ConstantString,float ConstantValue);
    void __cdecl SetEffectConstantInteger(int EffectNumber,LPCSTR ConstantString,int ConstantValue);
    void __cdecl SetEffectConstantMatrix(int EffectNumber,LPCSTR ConstantString,int MatrixNumber);
    void __cdecl SetEffectConstantVector(int EffectNumber,LPCSTR ConstantString,int VectorNumber);
    void __cdecl SetEffectOn(int ObjectNumber,LPCSTR EffectFilename,int TextureFlag);
    void __cdecl SetEffectTechnique(int EffectNumber,LPCSTR TechniqueName);
    void __cdecl SetEffectTranspose(int EffectNumber,int TransposeFlag);
    void __cdecl SetGlobalCollisionOff();
    void __cdecl SetGlobalCollisionOn();
    void __cdecl SetGlobalObjectCreation(int CreationMode);
    void __cdecl SetIndexdata(int IndiceIndex,int VertexIndex);
    void __cdecl SetLegacyConvertMode(int LegacyMode);
    void __cdecl SetLightMappingOn(int ObjectNumber,int ImageNumber);
    void __cdecl SetLightMappingOn(int ObjectNumber,int ImageNumber,int ReverseStageMode);
    void __cdecl SetLimbEffect(int ObjectNumber,int LimbNumber,int EffectNumber);
    void __cdecl SetLimbNormals(int ObjectNumber,int LimbNumber);
    void __cdecl SetLimbSmoothing(int ObjectNumber,int LimbNumber,float Percentage);
    void __cdecl SetMipmapMode(int MipmapMode);
    void __cdecl SetObjectAmbience(int ObjectNumber,DWORD ColorValue);
    void __cdecl SetObjectAmbient(int ObjectNumber,int Flag);
    void __cdecl SetObjectCollisionOff(int ObjectNumber);
    void __cdecl SetObjectCollisionOn(int ObjectNumber);
    void __cdecl SetObjectCollisionToBoxes(int ObjectNumber);
    void __cdecl SetObjectCollisionToPolygons(int ObjectNumber);
    void __cdecl SetObjectCollisionToSpheres(int ObjectNumber);
    void __cdecl SetObjectCull(int ObjectNumber,int Flag);
    void __cdecl SetObjectDiffuse(int ObjectNumber,DWORD ColorValue);
    void __cdecl SetObjectDiffuse(int ObjectNumber,DWORD ColorValue,int Vertexdiffusemode);
    void __cdecl SetObjectEffect(int ObjectNumber,int EffectNumber);
    void __cdecl SetObjectEffect(int ObjectNumber,int EffectNumber,int ForceCpuAnimation);
    void __cdecl SetObjectEmissive(int ObjectNumber,DWORD ColorValue);
    void __cdecl SetObjectFilter(int ObjectNumber,int Flag);
    void __cdecl SetObjectFilter(int ObjectNumber,int StageNumber,int Flag);
    void __cdecl SetObjectFog(int ObjectNumber,int Flag);
    void __cdecl SetObjectFov(int ObjectNumber,float FovAngle);
    void __cdecl SetObjectFrame(int ObjectNumber,float Frame);
    void __cdecl SetObjectFrame(int ObjectNumber,float Frame,int RecalculateBounds);
    void __cdecl SetObjectFrame(int ObjectNumber,int Limb,float Frame,int RecalculateBounds);
    void __cdecl SetObjectInterpolation(int ObjectNumber,int Interpolation);
    void __cdecl SetObjectKeyframe(int ObjectNumber,int Keyframe);
    void __cdecl SetObjectLight(int ObjectNumber,int Flag);
    void __cdecl SetObjectMask(int ObjectNumber,int CameraMaskBits);
    void __cdecl SetObjectMask(int ObjectNumber,int CameraMaskBits,int ShadowMask,int CubemapMask,int ForeColorWipeMask);
    void __cdecl SetObjectNormals(int ObjectNumber);
    void __cdecl SetObjectRadius(int ObjectNumber,float Radius);
    void __cdecl SetObjectRotationXyz(int ObjectNumber);
    void __cdecl SetObjectRotationZyx(int ObjectNumber);
    void __cdecl SetObjectSmoothing(int ObjectNumber,float Percentage);
    void __cdecl SetObjectSpecularPower(int ObjectNumber,float Power);
    void __cdecl SetObjectSpecular(int ObjectNumber,DWORD ColorValue);
    void __cdecl SetObjectSpecular(int ObjectNumber,DWORD ColorValue,float PowerValue);
    void __cdecl SetObjectSpeed(int ObjectNumber,int Speed);
    void __cdecl SetObjectTexture(int ObjectNumber,int TexturingMode,int MipmapFlag);
    void __cdecl SetObjectTexture(int ObjectNumber,int StageNumber,int TexturingMode,int MipmapFlag);
    void __cdecl SetObjectToCameraOrientation(int ObjectNumber);
    void __cdecl SetObjectToObjectOrientation(int ObjectNumber,int SecondObject);
    void __cdecl SetObjectToObjectOrientation(int ObjectNumber,int SecondObject,int Flag);
    void __cdecl SetObjectTransparency(int ObjectNumber,int Flag);
    void __cdecl SetObjectWireframe(int ObjectNumber,int Flag);
    void __cdecl SetObject(int ObjectNumber,int Wire,int Transparent,int Cull);
    void __cdecl SetObject(int ObjectNumber,int Wire,int Transparent,int Cull,int Filter);
    void __cdecl SetObject(int ObjectNumber,int Wire,int Transparent,int Cull,int Filter,int Light);
    void __cdecl SetObject(int ObjectNumber,int Wire,int Transparent,int Cull,int Filter,int Light,int Fog);
    void __cdecl SetObject(int ObjectNumber,int Wire,int Transparent,int Cull,int Filter,int Light,int Fog,int Ambient);
    void __cdecl SetPixelShaderOff(int ObjectNumber);
    void __cdecl SetPixelShaderOn(int ObjectNumber,int PixelshaderNumber);
    void __cdecl SetPixelShaderTexture(int PixelshaderNumber,int SlotNumber,int ImageNumber);
    void __cdecl SetRainbowShadingOn(int ObjectNumber,int RainbowImage);
    void __cdecl SetReflectionShadingOn(int ObjectNumber);
    void __cdecl SetShadingOff(int ObjectNumber);
    void __cdecl SetShadowShadingOff(int ObjectNumber);
    void __cdecl SetShadowShadingOn(int ObjectNumber);
    void __cdecl SetShadowShadingOn(int ObjectNumber,int MeshNumber,int ShadowRange,int UseShader);
    void __cdecl SetSphereMappingOn(int ObjectNumber,int ImageNumber);
    void __cdecl SetTextureMd3(int ObjectNumber,int H0,int H1,int L0,int L1,int L2,int U0);
    void __cdecl SetVertexShaderMatrix(int VertexshaderNumber,int Constant,int Matrix4,int Constantcount);
    void __cdecl SetVertexShaderOff(int ObjectNumber);
    void __cdecl SetVertexShaderOn(int ObjectNumber,int VertexshaderNumber);
    void __cdecl SetVertexShaderStream(int VertexshaderNumber,int Position,int Data,int Datatype);
    void __cdecl SetVertexShaderStreamcount(int VertexshaderNumber,int Count);
    void __cdecl SetVertexShaderVector(int VertexshaderNumber,int Constant,int Vector3,int Constantcount);
    void __cdecl SetVertexdataDiffuse(int VertexIndex,DWORD RgbValue);
    void __cdecl SetVertexdataNormals(int VertexIndex,float Nx,float Ny,float Nz);
    void __cdecl SetVertexdataPosition(int VertexIndex,float X,float Y,float Z);
    void __cdecl SetVertexdataUv(int VertexIndex,float U,float V);
    void __cdecl SetVertexdataUv(int VertexIndex,int Index,float U,float V);
    void __cdecl ShowLimb(int ObjectNumber,int LimbNumber);
    void __cdecl ShowObjectBounds(int ObjectNumber);
    void __cdecl ShowObjectBounds(int ObjectNumber,int BoxOnlyFlag);
    void __cdecl ShowObject(int ObjectNumber);
    float __cdecl StaticLineOfSightX();
    float __cdecl StaticLineOfSightY();
    float __cdecl StaticLineOfSightZ();
    int __cdecl Statistic(int StatisticCode);
    void __cdecl StopObject(int ObjectNumber);
    void __cdecl TextureLimb(int ObjectNumber,int LimbNumber,int ImageNumber);
    void __cdecl TextureLimb(int ObjectNumber,int LimbNumber,int StageNumber,int ImageNumber);
    void __cdecl TextureObject(int ObjectNumber,int ImageNumber);
    void __cdecl TextureObject(int ObjectNumber,int StageNumber,int ImageNumber);
    void __cdecl TextureObject(int ObjectNumber,int StageNumber,int ImageNumber,int IgnoreSorting);
    int __cdecl TexturesystemmemoryAvailable();
    int __cdecl TexturevideomemoryAvailable();
    int __cdecl TlvertexsystemmemoryAvailable();
    int __cdecl TlvertexvideomemoryAvailable();
    int __cdecl TnlAvailable();
    int __cdecl TotalObjectFrames(int ObjectNumber);
    void __cdecl TurnObjectLeft(int ObjectNumber,float Value);
    void __cdecl TurnObjectRight(int ObjectNumber,float Value);
    void __cdecl UnglueObject(int ObjectNumber);
    void __cdecl UnlockVertexdata();
    int __cdecl VertexShaderExist(int VertexshaderNumber);
    int __cdecl VolumemapAvailable();
    int __cdecl WbufferAvailable();
    int __cdecl WfogAvailable();
    void __cdecl XrotateObject(int ObjectNumber,float Xangle);
    void __cdecl YrotateObject(int ObjectNumber,float Yangle);
    int __cdecl ZbufferAvailable();
    int __cdecl ZfogAvailable();
    void __cdecl ZrotateObject(int ObjectNumber,float Zangle);
    bool __cdecl CreateNewObject(int ObjectNumber,LPCSTR ObjectName);
    bool __cdecl CreateNewObject(int ObjectNumber,LPCSTR ObjectName,int MeshCount);
    bool __cdecl SetupMeshFvfData(sMesh* MeshData,DWORD FvfFormat,DWORD VertexCount,DWORD IndexCount);
    bool __cdecl SetNewObjectFinalProperties(int ObjectNumber,float Radius);
    bool __cdecl CalculateMeshBounds(sMesh* MeshData);
    sObject* __cdecl GetObjectData(int ObjectNumber);
    void __cdecl SetDeleteObjectCallback(int ObjectNumber,function_vii FunctionPtr,int UserData);
    bool __cdecl AddMeshToMesh(sMesh* Target,sMesh* Source);
    void __cdecl CreateMeshForObject(int ObjectNumber,DWORD FvfFormat,DWORD VertexCount,DWORD IndexCount);
    int __cdecl GetLimbCount(int ObjectNumber);
    bool __cdecl GetFvfOffsetMap(sMesh* Mesh,sOffsetMap* OffsetMap);
    bool __cdecl GetFvfOffsetMap(DWORD FvfValue,sOffsetMap* OffsetMap);
    void __cdecl ConvertToFvf(sMesh* Mesh,DWORD Fvf);
    bool __cdecl SetupStandardVertex(DWORD Fvf,BYTE* VertexPointer,int VertexOffset,float x,float y,float z,float nx,float ny,float nz,DWORD Diffuse,float tu,float tv);
    bool __cdecl ConvertMeshToTriList(sMesh* Mesh);
    void __cdecl SetMeshCullMode(sMesh* Mesh,int CullMode);
    void __cdecl SetMeshTransparency(sMesh* Mesh,bool Transparency);
    bool __cdecl CalcObjectWorld(sObject* Object);
}

#endif
