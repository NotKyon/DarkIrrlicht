IRR INIT==IRR INIT api,screenwidth,screenheight
IRR DROP==IRR DROP
IRR KEYSTATE==IRR KEYSTATE(scancode) return bool
IRR BEGIN SCENE==IRR BEGIN SCENE color
IRR END SCENE==IRR END SCENE
IRR MOUSE X==IRR MOUSE X() return mousex
IRR MOUSE Y==IRR MOUSE Y() return mousey
IRR MOUSE Z==IRR MOUSE Z() return mousez
IRR MOUSE CLICK==IRR MOUSE CLICK() return mouseclick
IRR MOUSE FLUSH==IRR MOUSE FLUSH
IRR MOUSE MOVE X==IRR MOUSE MOVE X() return movex
IRR MOUSE MOVE Y==IRR MOUSE MOVE Y() return movey
ISCN GET MESH==ISCN GET MESH(filename$) return amesh
ISCN ADD CUBE NODE==ISCN ADD CUBE NODE(parent,size#) return scenenode
ISCN ADD SPHERE NODE==ISCN ADD SPHERE NODE(parent,radius#,polycount) return scenenode
ISCN ADD ANIM MESH NODE==ISCN ADD ANIM MESH NODE(parent,mesh) return scenenode
ISCN ADD MESH NODE==ISCN ADD MESH NODE(parent,mesh) return scenenode
ISCN ADD WATER SURFACE NODE=ISCN ADD WATER SURFACE NODE(parent,mesh,waveheight#,wavespeed#,wavelength#) return scenenode
ISCN ADD CAMERA NODE==ISCN ADD CAMERA NODE(parent) return camnode
ISCN ADD LIGHT NODE==ISCN ADD LIGHT NODE(parent) return lightnode
ISCN ADD BILLBOARD NODE==ISCN ADD BILLBOARD NODE(parent) return billboardnode
ISCN ADD SKYBOX NODE==ISCN ADD SKYBOX NODE(parent,top,bottom,left,right,front,back) return scenenode
ISCN ADD SKYDOME NODE==ISCN ADD SKYDOME NODE(parent,texture,horzres,vertres,texturepercent#,spherepercent#,radius#) return scenenode
ISCN ADD PARTICLE NODE==ISCN ADD PARTICLE NODE(parent,defaultflag) return particlenode
ISCN ADD TERRAIN NODE=ISCN ADD TERRAIN NODE(parent,heightmap$) return terrainnode
ISCN ADD EMPTY NODE==ISCN ADD EMPTY NODE(parent) return scenenode
ISCN ADD DUMMY TRANSFORM NODE==ISCN ADD DUMMY TRANSFORM NODE(parent) return scenenode
ISCN ADD TEXT NODE==ISCN ADD TEXT NODE(parent,font,text$,color) return textnode
ISCN ADD BILLBOARD TEXT NODE==ISCN ADD BILLBOARD TEXT NODE(parent,font,text$) return textbillboardnode
ISCN GET TERRAIN MESH==ISCN GET TERRAIN MESH(name$,imagetexture,imageheightmap) return terrainmesh
ISCN GET SPHERE MESH==ISCN GET SPHERE MESH(name$,radius#,xcount,ycount) return mesh
ISCN GET VOLUME LIGHT MESH==ISCN GET VOLUME LIGHT MESH(name$,subdivideU,subdivideV,footcolor,tailcolor) return mesh
ISCN GET ROOT NODE==ISCN GET ROOT NODE() return scenenode
ISCN GET ID NODE==ISCN GET ID NODE(id,startnode) return scenenode
ISCN GET NAME NODE==ISCN GET NAME NODE(name$,startnode) return scenenode
ISCN GET CAMERA==ISCN GET CAMERA() return camnode
ISCN SET CAMERA==ISCN SET CAMERA camnode
ISCN SET SHADOW COLOR==ISCN SET SHADOW COLOR color
ISCN GET SHADOW COLOR==ISCN GET SHADOW COLOR() return color
ISCN DRAW ALL=ISCN DRAW ALL
ISCN CLEAR==ISCN CLEAR
ISCN ADD NODE==ISCN ADD NODE(parent,name$) return scenenode
ISCN CREATE NEW SCENE==ISCN CREATE NEW SCENE(cloneflag) return scenemanager
ISCN IS CULLED==ISCN IS CULLED(node) return bool
IDEV RUN==IDEV RUN() return bool
IDEV YEILD==IDEV YEILD
IDEV SET WINDOW CAPTION==IDEV SET WINDOW CAPTION caption$
IDEV IS WINDOW ACTIVE==IDEV IS WINDOW ACTIVE() return bool
IDEV IS WINDOW FOCUSED==IDEV IS WINDOW FOCUSED() return bool
IDEV IS WINDOW MINIMIZED==IDEV IS WINDOW MINIMIZED() return bool
IDEV IS FULL SCREEN==IDEV IS FULL SCREEN() return bool
IDEV GET COLOR FORMAT==IDEV GET COLOR FORMAT() return colorformat
IDEV CLOSE DEVICE==IDEV CLOSE DEVICE
IDEV SET RESIZEABLE==IDEV SET RESIZEABLE resizeflag
IDEV MINIMIZE WINDOW==IDEV MINIMIZE WINDOW
IDEV MAXIMIZE WINDOW==IDEV MAXIMIZE WINDOW
IDEV RESTORE WINDOW==IDEV RESTORE WINDOW
IDEV CLEAR SYS MESSAGES==IDEV CLEAR SYS MESSAGES
IDEV TIMER TICK==IDEV TIMER TICK
IMESH SET==IMESH SET meshnode,mesh
IMESH GET==IMESH GET(meshnode) return mesh
IMESH SET READONLY==IMESH SET READONLY meshnode,readonlyflag
IMESH IS READONLY==IMESH IS READONLY(meshnode) return bool
IMESH GET BUFFER COUNT==IMESH GET BUFFER COUNT(mesh) return buffercount
IMESH GET BUFFER==IMESH GET BUFFER(mesh,number) return mesh
IMESH SET MATERIAL==IMESH SET MATERIAL mesh,materialflag,newflagvalue
IMESH SET HARDWARE HINT==IMESH SET HARDWARE HINT mesh,mappinghint,buffertype
IMESH SET DIRTY==IMESH SET DIRTY mesh,buffertype
IAMESH GET FRAME COUNT==IAMESH GET FRAME COUNT(animmesh) return framecount
IAMESH GET ANIM MESH==IAMESH GET ANIM MESH(animmesh,frame,detaillevel,startframe,endframe) return mesh
IAMNODE SET FRAME==IAMNODE SET FRAME amnode,frame#
IAMNODE SET LOOP==IAMNODE SET LOOP amnode,start#,end#
IAMNODE SET SPEED==IAMNODE SET SPEED amnode,fps#
ICAM TARGET==ICAM TARGET camnode,x#,y#,z#
ICAM ROTATE==ICAM ROTATE camnode,x#,y#,z#
ICAM UP VECTOR==ICAM UP VECTOR camnode,x#,y#,z#
ICAM GET NEAR==ICAM GET NEAR(camnode) return near#
ICAM GET FAR==ICAM GET FAR(camnode) return far#
ICAM GET ASPECT==ICAM GET ASPECT(camnode) return aspect#
ICAM GET FOV==ICAM GET FOV(camnode) return fov#
ICAM SET NEAR==ICAM SET NEAR camnode,near#
ICAM SET FAR==ICAM SET FAR camnode,far#
ICAM SET ASPECT==ICAM SET ASPECT camnode,aspect#
ICAM SET FOV==ICAM SET FOV camnode,fov#
IIMG LOCK==IIMG LOCK image
IIMG UNLOCK==IIMG UNLOCK image
IIMG WIDTH==IIMG WIDTH(image) return width
IIMG HEIGHT==IIMG HEIGHT(image) return height
IIMG PIXEL BITS==IIMG PIXEL BITS(image) return bitsperpixel
IIMG PIXEL BYTES==IIMG PIXEL BYTES(image) return bytesperpixel
IIMG SIZE BYTES==IIMG SIZE BYTES(image) return sizeinbytes
IIMG SIZE PIXELS==IIMG SIZE PIXELS(image) return sizeinpixels
IIMG GET PIXEL==IIMG GET PIXEL(image,x,y) return pixelcolor
IIMG SET PIXEL==IIMG SET PIXEL image,x,y,color,blend
IIMG COLOR FORMAT==IIMG COLOR FORMAT(image) return colorformat
IIMG PITCH==IIMG PITCH(image) return imagepitch
IIMG PASTE SCALED==IIMG PASTE SCALED image,targetimage
IIMG PASTE==IIMG PASTE image,targetimage,x,y
IIMG PASTE RECT==IIMG PASTE RECT image,target,x,y,sx1,sy1,sx2,sy2
IIMG PASTE RECT CLIP==IIMG PASTE RECT CLIP image,target,x,y,sx1,sy1,sx2,sy2,cx1,cy1,cx2,cy2
IIMG PASTE RECT ALPHA==IIMG PASTE RECT ALPHA image,target,x,y,sx1,sy1,sx2,sy2,color
IIMG PASTE RECT CLIP ALPHA==IIMG PASTE RECT CLIP ALPHA image,target,x,y,sx1,sy1,sx2,sy2,color,cx1,cy1,cx2,cy2
IIMG PASTE BLEND==IIMG PASTE BLEND image,target,bias,blend
IIMG FILL==IIMG FILL image,color
INODE VISIBLE==INODE VISIBLE(node) return bool
INODE TRULY VISIBLE==INODE TRULY VISIBLE(node) return bool
INODE SET VISIBLE==INODE SET VISIBLE node,visibleflag
INODE ID==INODE ID(node) return id
INODE SET ID==INODE SET ID node,id
INODE ADD CHILD==INODE ADD CHILD node,childnode
INODE REMOVE CHILD==INODE REMOVE CHILD(node,childnode) return bool
INODE REMOVE ALL==INODE REMOVE ALL node
INODE REMOVE==INODE REMOVE node
INODE ADD ANIMATOR==INODE ADD ANIMATOR node,animator
INODE REMOVE ANIMATOR==INODE REMOVE ANIMATOR node,animator
INODE REMOVE ANIMATORS==INODE REMOVE ANIMATORS node
INODE MATERIAL COUNT==INODE MATERIAL COUNT(node) return materialcount
INODE MATERIAL FLAG==INODE MATERIAL FLAG node,materialflag,newflag
INODE MATERIAL TEXTURE==INODE MATERIAL TEXTURE node,layer,texture
INODE MATERIAL TYPE==INODE MATERIAL TYPE node,materialtype
INODE SCALEX==INODE SCALEX(node) return scalex#
INODE SCALEY==INODE SCALEY(node) return scaley#
INODE SCALEZ==INODE SCALEZ(node) return scalez#
INODE SCALE==INODE SCALE node,x#,y#,z#
INODE ROTX==INODE ROTX(node) return rotationx#
INODE ROTY==INODE ROTY(node) return rotationy#
INODE ROTZ==INODE ROTZ(node) return rotationz#
INODE ROT==INODE ROT node,x#,y#,z#
INODE POSX==INODE POSX(node) return positionx#
INODE POSY==INODE POSY(node) return positiony#
INODE POSZ==INODE POSZ(node) return positionz#
INODE POS==INODE POS node,x#,y#,z#
INODE ABS POSX==INODE ABS POSX(node) return positionx#
INODE ABS POSY==INODE ABS POSY(node) return positiony#
INODE ABS POSZ==INODE ABS POSZ(node) return positionz#
INODE SET CULL==INODE SET CULL node,cullstate
INODE CULL==INODE CULL(node) return cullmode
INODE SET DEBUG VISIBLE==INODE SET DEBUG VISIBLE node,debugstate
INODE DEBUG VISIBLE==INODE DEBUG VISIBLE(node) return debugstate
INODE SET PARENT==INODE SET PARENT node,parentnode
INODE PARENT==INODE PARENT(node) return scenenode
IVID BEGIN==IVID BEGIN backbuffer,zbuffer,color
IVID END==IVID END
IVID MATERIAL==IVID MATERIAL material
IVID GET TEXTURE==IVID GET TEXTURE(file$) return texture
IVID GET ID TEXTURE==IVID GET ID TEXTURE(id) return id
IVID GET TEXTURE COUNT==IVID GET TEXTURE COUNT() return count
IVID RENAME TEXTURE==IVID RENAME TEXTURE texture,name$
IVID NEW TEXTURE==IVID NEW TEXTURE(width,height,name$) return texture
IVID IMAGE TEXTURE==IVID IMAGE TEXTURE(name$,image) return texture
IVID RENDER TEXTURE==IVID RENDER TEXTURE(width,height) return texture
IVID REMOVE TEXTURE==IVID REMOVE TEXTURE texture
IVID REMOVE ALL TEXTURES==IVID REMOVE ALL TEXTURES
IVID REMOVE MESH BUFFER==IVID REMOVE MESH BUFFER hwbuffer
IVID REMOVE ALL MESH BUFFERS==IVID REMOVE ALL MESH BUFFERS
IVID TEXTURE COLOR KEY==IVID TEXTURE COLOR KEY texture,color
IVID TEXTURE COLOR KEY PIXEL==IVID TEXTURE COLOR KEY PIXEL texture,x,y
IVID TEXTURE NORMAL MAP==IVID TEXTURE NORMAL MAP texture,amplitude#
IVID SET RENDER TARGET==IVID SET RENDER TARGET(texture,backbuffer,zbuffer,color) return bool
IVID VIEWPORT==IVID VIEWPORT x1,y1,x2,y2
IVID LINE 3D==IVID LINE 3D x1#,y1#,z1#,x2#,y2#,z2#,color
IVID PASTE IMAGE==IVID PASTE IMAGE texture,x,y
IVID RECT==IVID RECT x1,y1,x2,y2,color
IVID RECTO==IVID RECTO x1,y1,x2,y2,color
IVID LINE==IVID LINE x1,y1,x2,y2,color
IVID PIXEL==IVID PIXEL x,y,color
IVID POLYGON==IVID POLYGON centerx,centery,radius#,color,vertcount
IVID MESH BUFFER==IVID MESH BUFFER hwbuffer
IVID FOG==IVID FOG color,type,start#,end#,density#,pixelfog,rangefog
IVID GET COLOR FORMAT==IVID GET COLOR FORMAT() return colorformat
IVID SCREENX==IVID SCREENX() return screenwidth
IVID SCREENY==IVID SCREENY() return screenheight
IVID RENDER TARGETX==IVID RENDER TARGETX() return texturewidth
IVID RENDER TARGETY==IVID RENDER TARGETY() return textureheight
IVID FPS==IVID FPS() return fps
IVID PRIMITIVE COUNT==IVID PRIMITIVE COUNT(mode) return tricount
IVID DELETE ALL DLIGHTS==IVID DELETE ALL DLIGHTS
IVID ADD DLIGHT==IVID ADD DLIGHT(dlight) return index
IVID MAX DLIGHTS==IVID MAX DLIGHTS() return max
IVID DLIGHT COUNT==IVID DLIGHT COUNT() return count
IVID GET DLIGHT==IVID GET DLIGHT(index) return slight
IVID DLIGHT ON==IVID DLIGHT ON index,onflag
IVID TEXTURE CREATION==IVID TEXTURE CREATION textureflag,enabled
IVID GET TEXTURE CREATION==IVID GET TEXTURE CREATION(textureflag) return flag
IVID GET IMAGE==IVID GET IMAGE(file$) return image
IVID NEW IMAGE==IVID NEW IMAGE(format,width,height) return image
IVID NEW IMAGE COPY==IVID NEW IMAGE COPY(format,imagetocopy) return image
IVID NEW IMAGE COPY RECT==IVID NEW IMAGE COPY RECT(image,x1,y1,x2,y2) return image
IVID NEW IMAGE TEXTURE RECT==IVID NEW IMAGE TEXTURE RECT(texture,x1,y1,x2,y2) return image
IVID CLEAR ZBUFFER==IVID CLEAR ZBUFFER
IVID SCREEN SHOT==IVID SCREEN SHOT() return image
IVID MAX TEXTURE SIZE==IVID MAX TEXTURE SIZE() return maxsize
ILIGHT SET RADIUS==ILIGHT SET RADIUS light,radius#
ILIGHT GET RADIUS==ILIGHT GET RADIUS(light) return radius#
ILIGHT SET TYPE==ILIGHT SET TYPE light,type
ILIGHT GET TYPE==ILIGHT GET TYPE(light) return type
ILIGHT SET SHADOW==ILIGHT SET SHADOW light,enable
ILIGHT GET SHADOW==ILIGHT GET SHADOW(light) return enabled
IBOARD SET SIZE==IBOARD SET SIZE node,w#,h#
IBOARD GET WIDTH==IBOARD GET WIDTH node
IBOARD GET HEIGHT==IBOARD GET HEIGHT node
IBOARD SET COLOR==IBOARD SET COLOR node,topcolor,bottomcolor
ITBOARD SET TEXT==ITBOARD SET TEXT tbnode,text$
IFONT DRAW==IFONT DRAW font,x,y,color,text$
IGUI GET DEFAULT FONT==IGUI GET DEFAULT FONT() return font
IGUI GET FONT==IGUI GET FONT(file$) return font
IABOX NEW==IABOX NEW() return abox
IABOX DELETE==IABOX DELETE abox
IABOX SET==IABOX SET abox,x1#,y1#,z1#,x2#,y2#,z2#
IABOX CENTER X==IABOX CENTER X(abox) return x#
IABOX CENTER Y==IABOX CENTER Y(abox) return y#
IABOX CENTER Z==IABOX CENTER Z(abox) return z#
IABOX EXTENT X==IABOX EXTENT X(abox) return x#
IABOX EXTENT Y==IABOX EXTENT Y(abox) return y#
IABOX EXTENT Z==IABOX EXTENT Z(abox) return z#
IABOX IS EMPTY==IABOX IS EMPTY(abox) return bool
IABOX VOLUME==IABOX VOLUME(abox) return volume
IABOX AREA==IABOX AREA(abox) return area
IABOX REPAIR==IABOX REPAIR abox
IABOX POINT INSIDE==IABOX POINT INSIDE(abox,x#,y#,z#) return bool
IABOX BOX INSIDE==IABOX BOX INSIDE(abox,srcbox) return bool
IABOX INTERSECT BOX==IABOX INTERSECT BOX(abox,srcbox) return bool
IABOX INTERSECT LINE==IABOX INTERSECT LINE(abox,x1#,y1#,z1#,x2#,y2#,z2#) return bool
IMAT DELETE==IMAT DELETE material
IMAT NEW==IMAT NEW() return material
IMAT SET FLAG==IMAT SET FLAG material,matflag,flag
IMAT GET FLAG==IMAT GET FLAG(material,matflag) return flag
IMAT COPY==IMAT COPY material,srcmaterial
IMAT SET TEXTURE==IMAT SET TEXTURE material,layer,texture
IMAT GET TEXTURE==IMAT GET TEXTURE(material,layer) return texture
IMBUFF GET MATERIAL==IMBUFF GET MATERIAL(mbuff) return material
IMBUFF GET VERTEX TYPE==IMBUFF GET VERTEX TYPE(mbuff) return E_VERTEX_TYPE
IMBUFF GET VERTICES==IMBUFF GET VERTICES(mbuff) return vertexbuffer
IMBUFF GET VERTEX COUNT==IMBUFF GET VERTEX COUNT(mbuff) return vertexcount
IMBUFF GET INDEX TYPE==IMBUFF GET INDEX TYPE(mbuff) return E_INDEX_TYPE
IMBUFF GET INDICES==IMBUFF GET INDICES(mbuff) return indexbuffer
IMBUFF GET INDEX COUNT==IMBUFF GET INDEX COUNT(mbuff) return indexcount
IMBUFF GET VERT POS X==IMBUFF GET VERT POS X(mbuff,vert) return x#
IMBUFF GET VERT POS Y==IMBUFF GET VERT POS Y(mbuff,vert) return y#
IMBUFF GET VERT POS Z==IMBUFF GET VERT POS Z(mbuff,vert) return z#
IMBUFF GET VERT NORM X==IMBUFF GET VERT NORM X(mbuff,vert) return x#
IMBUFF GET VERT NORM Y==IMBUFF GET VERT NORM Y(mbuff,vert) return y#
IMBUFF GET VERT NORM Z==IMBUFF GET VERT NORM Z(mbuff,vert) return z#
IMBUFF GET VERT U==IMBUFF GET VERT U(mbuff,vert) return u#
IMBUFF GET VERT V==IMBUFF GET VERT V(mbuff,vert) return v#
IMBUFF APPEND RAW BUFFER==IMBUFF APPEND RAW BUFFER mbuff,vertices,vertcnt,indices,indexcnt
IMBUFF APPEND MESH BUFFER==IMBUFF APPEND MESH BUFFER mbuff,srcmbuff
IMBUFF GET HW HINT VERTEX==IMBUFF GET HW HINT VERTEX(mbuff) return E_HARDWARE_MAPPING
IMBUFF GET HW HINT INDEX==IMBUFF GET HW HINT INDEX(mbuff) return E_HARDWARE_MAPPING
IMBUFF SET HW HINT==IMBUFF SET HW HINT mbuff,hint,buffertype
IMBUFF SET DIRTY==IMBUFF SET DIRTY mbuff,buffertype
IVEC3 NEW==IVEC3 NEW() return NEW vec
IVEC3 DELETE==IVEC3 DELETE vec
IVEC3 SET==IVEC3 SET vec,x#,y#,z#
IVEC3 COPY==IVEC3 COPY vec,srcvec
IVEC3 ADD==IVEC3 ADD vec,srcvec
IVEC3 SUB==IVEC3 SUB vec,srcvec
IVEC3 DIV==IVEC3 DIV vec,srcvec
IVEC3 MUL==IVEC3 MUL vec,srcvec
IVEC3 IS GREQ==IVEC3 IS GREQ(vec,vec) return bool
IVEC3 IS LOEQ==IVEC3 IS LOEQ(vec,vec) return bool
IVEC3 IS GR==IVEC3 IS GR(vec,vec) return bool
IVEC3 IS LO==IVEC3 IS LO(vec,vec) return bool
IVEC3 IS EQ==IVEC3 IS EQ(vec,vec) return bool
IVEC3 LENGTH==IVEC3 LENGTH(vec) return length#
IVEC3 LENGTHSQ==IVEC3 LENGTHSQ(vec) return lengthsq#
IVEC3 DOT PRODUCT==IVEC3 DOT PRODUCT(vec,vec) return dotproduct#
IVEC3 DISTANCE==IVEC3 DISTANCE(vec,vec) return distance#
IVEC3 DISTANCESQ==IVEC3 DISTANCESQ(vec,vec) return distancesq#
IVEC3 CROSS PRODUCT==IVEC3 CROSS PRODUCT(vec,vec) return tempvec
IVEC3 IS BETWEEN==IVEC3 IS BETWEEN(vec,beginvec,endvec) return bool
IVEC3 NORMALIZE==IVEC3 NORMALIZE vec
IVEC3 SET LENGTH==IVEC3 SET LENGTH vec,length#
IVEC3 INVERT==IVEC3 INVERT vec
IVEC3 ROTATE Y==IVEC3 ROTATE Y vec,degrees#,centervec
IVEC3 ROTATE Z==IVEC3 ROTATE Z vec,degrees#,centervec
IVEC3 ROTATE X==IVEC3 ROTATE X vec,degrees#,centervec
IVEC3 INTERPOLATED==IVEC3 INTERPOLATED(vec,vec,delt#) return tempvec
IVEC3 INTERPOLATED QUAD==IVEC3 INTERPOLATED QUAD(vec1,vec2,vec3,delt#) return tempvec
IVEC3 INTERPOLATE==IVEC3 INTERPOLATE vec,vec1,vec2,delt#
IVEC3 GET HORIZ ANGLE==IVEC3 GET HORIZ ANGLE(vec) return tempvec
IVEC3 GET SPHERE ANGLES==IVEC3 GET SPHERE ANGLES(vec) return tempvec
IVEC3 ROTATE DIRECTION==IVEC3 ROTATE DIRECTION(vec,forwardvec) return tempvec
IVEC3 GET X==IVEC3 GET X(vec) return x#
IVEC3 GET Y==IVEC3 GET Y(vec) return y#
IVEC3 GET Z==IVEC3 GET Z(vec) return z#
